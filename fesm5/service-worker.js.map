{"version":3,"file":"service-worker.js","sources":["../../../packages/service-worker/esm5/src/low_level.js","../../../packages/service-worker/esm5/src/push.js","../../../packages/service-worker/esm5/src/update.js","../../../packages/service-worker/esm5/src/module.js","../../../packages/service-worker/esm5/src/index.js","../../../packages/service-worker/esm5/public_api.js","../../../packages/service-worker/esm5/service-worker.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { concat, defer, fromEvent, of, throwError } from 'rxjs';\nimport { filter, map, publish, switchMap, take, tap } from 'rxjs/operators';\n/** @type {?} */\nexport var ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n/**\n * An event emitted when a new version of the app is available.\n *\n * \\@publicApi\n * @record\n */\nexport function UpdateAvailableEvent() { }\n/** @type {?} */\nUpdateAvailableEvent.prototype.type;\n/** @type {?} */\nUpdateAvailableEvent.prototype.current;\n/** @type {?} */\nUpdateAvailableEvent.prototype.available;\n/**\n * An event emitted when a new version of the app has been downloaded and activated.\n *\n * \\@publicApi\n * @record\n */\nexport function UpdateActivatedEvent() { }\n/** @type {?} */\nUpdateActivatedEvent.prototype.type;\n/** @type {?|undefined} */\nUpdateActivatedEvent.prototype.previous;\n/** @type {?} */\nUpdateActivatedEvent.prototype.current;\n/**\n * An event emitted when a `PushEvent` is received by the service worker.\n * @record\n */\nexport function PushEvent() { }\n/** @type {?} */\nPushEvent.prototype.type;\n/** @type {?} */\nPushEvent.prototype.data;\n/** @typedef {?} */\nvar IncomingEvent;\nexport { IncomingEvent };\n/**\n * @record\n */\nexport function TypedEvent() { }\n/** @type {?} */\nTypedEvent.prototype.type;\n/**\n * @record\n */\nfunction StatusEvent() { }\n/** @type {?} */\nStatusEvent.prototype.type;\n/** @type {?} */\nStatusEvent.prototype.nonce;\n/** @type {?} */\nStatusEvent.prototype.status;\n/** @type {?|undefined} */\nStatusEvent.prototype.error;\n/**\n * @param {?} message\n * @return {?}\n */\nfunction errorObservable(message) {\n    return defer(function () { return throwError(new Error(message)); });\n}\n/**\n * \\@publicApi\n */\nvar /**\n * \\@publicApi\n */\nNgswCommChannel = /** @class */ (function () {\n    function NgswCommChannel(serviceWorker) {\n        this.serviceWorker = serviceWorker;\n        if (!serviceWorker) {\n            this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n        }\n        else {\n            /** @type {?} */\n            var controllerChangeEvents = fromEvent(serviceWorker, 'controllerchange');\n            /** @type {?} */\n            var controllerChanges = controllerChangeEvents.pipe(map(function () { return serviceWorker.controller; }));\n            /** @type {?} */\n            var currentController = defer(function () { return of(serviceWorker.controller); });\n            /** @type {?} */\n            var controllerWithChanges = concat(currentController, controllerChanges);\n            this.worker = controllerWithChanges.pipe(filter(function (c) { return !!c; }));\n            this.registration = /** @type {?} */ ((this.worker.pipe(switchMap(function () { return serviceWorker.getRegistration(); }))));\n            /** @type {?} */\n            var rawEvents = fromEvent(serviceWorker, 'message');\n            /** @type {?} */\n            var rawEventPayload = rawEvents.pipe(map(function (event) { return event.data; }));\n            /** @type {?} */\n            var eventsUnconnected = rawEventPayload.pipe(filter(function (event) { return event && event.type; }));\n            /** @type {?} */\n            var events = /** @type {?} */ (eventsUnconnected.pipe(publish()));\n            events.connect();\n            this.events = events;\n        }\n    }\n    /**\n     * @param {?} action\n     * @param {?} payload\n     * @return {?}\n     */\n    NgswCommChannel.prototype.postMessage = /**\n     * @param {?} action\n     * @param {?} payload\n     * @return {?}\n     */\n    function (action, payload) {\n        return this.worker\n            .pipe(take(1), tap(function (sw) {\n            sw.postMessage(tslib_1.__assign({ action: action }, payload));\n        }))\n            .toPromise()\n            .then(function () { return undefined; });\n    };\n    /**\n     * @param {?} type\n     * @param {?} payload\n     * @param {?} nonce\n     * @return {?}\n     */\n    NgswCommChannel.prototype.postMessageWithStatus = /**\n     * @param {?} type\n     * @param {?} payload\n     * @param {?} nonce\n     * @return {?}\n     */\n    function (type, payload, nonce) {\n        /** @type {?} */\n        var waitForStatus = this.waitForStatus(nonce);\n        /** @type {?} */\n        var postMessage = this.postMessage(type, payload);\n        return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n    };\n    /**\n     * @return {?}\n     */\n    NgswCommChannel.prototype.generateNonce = /**\n     * @return {?}\n     */\n    function () { return Math.round(Math.random() * 10000000); };\n    /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    NgswCommChannel.prototype.eventsOfType = /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        /** @type {?} */\n        var filterFn = function (event) { return event.type === type; };\n        return this.events.pipe(filter(filterFn));\n    };\n    /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    NgswCommChannel.prototype.nextEventOfType = /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return this.eventsOfType(type).pipe(take(1));\n    };\n    /**\n     * @param {?} nonce\n     * @return {?}\n     */\n    NgswCommChannel.prototype.waitForStatus = /**\n     * @param {?} nonce\n     * @return {?}\n     */\n    function (nonce) {\n        return this.eventsOfType('STATUS')\n            .pipe(filter(function (event) { return event.nonce === nonce; }), take(1), map(function (event) {\n            if (event.status) {\n                return undefined;\n            }\n            throw new Error(/** @type {?} */ ((event.error)));\n        }))\n            .toPromise();\n    };\n    Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !!this.serviceWorker; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgswCommChannel;\n}());\n/**\n * \\@publicApi\n */\nexport { NgswCommChannel };\nif (false) {\n    /** @type {?} */\n    NgswCommChannel.prototype.worker;\n    /** @type {?} */\n    NgswCommChannel.prototype.registration;\n    /** @type {?} */\n    NgswCommChannel.prototype.events;\n    /** @type {?} */\n    NgswCommChannel.prototype.serviceWorker;\n}\n//# sourceMappingURL=low_level.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { NEVER, Subject, merge } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { ERR_SW_NOT_SUPPORTED, NgswCommChannel } from './low_level';\n/**\n * Subscribe and listen to push notifications from the Service Worker.\n *\n * \\@publicApi\n */\nvar SwPush = /** @class */ (function () {\n    function SwPush(sw) {\n        this.sw = sw;\n        this.subscriptionChanges = new Subject();\n        if (!sw.isEnabled) {\n            this.messages = NEVER;\n            this.notificationClicks = NEVER;\n            this.subscription = NEVER;\n            return;\n        }\n        this.messages = this.sw.eventsOfType('PUSH').pipe(map(function (message) { return message.data; }));\n        this.notificationClicks =\n            this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(map(function (message) { return message.data; }));\n        this.pushManager = this.sw.registration.pipe(map(function (registration) { return registration.pushManager; }));\n        /** @type {?} */\n        var workerDrivenSubscriptions = this.pushManager.pipe(switchMap(function (pm) { return pm.getSubscription(); }));\n        this.subscription = merge(workerDrivenSubscriptions, this.subscriptionChanges);\n    }\n    Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n        /**\n         * True if the Service Worker is enabled (supported by the browser and enabled via\n         * `ServiceWorkerModule`).\n         */\n        get: /**\n         * True if the Service Worker is enabled (supported by the browser and enabled via\n         * `ServiceWorkerModule`).\n         * @return {?}\n         */\n        function () { return this.sw.isEnabled; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    SwPush.prototype.requestSubscription = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var _this = this;\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        var pushOptions = { userVisibleOnly: true };\n        /** @type {?} */\n        var key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n        /** @type {?} */\n        var applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n        for (var i = 0; i < key.length; i++) {\n            applicationServerKey[i] = key.charCodeAt(i);\n        }\n        pushOptions.applicationServerKey = applicationServerKey;\n        return this.pushManager.pipe(switchMap(function (pm) { return pm.subscribe(pushOptions); }), take(1))\n            .toPromise()\n            .then(function (sub) {\n            _this.subscriptionChanges.next(sub);\n            return sub;\n        });\n    };\n    /**\n     * @return {?}\n     */\n    SwPush.prototype.unsubscribe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        var doUnsubscribe = function (sub) {\n            if (sub === null) {\n                throw new Error('Not subscribed to push notifications.');\n            }\n            return sub.unsubscribe().then(function (success) {\n                if (!success) {\n                    throw new Error('Unsubscribe failed!');\n                }\n                _this.subscriptionChanges.next(null);\n            });\n        };\n        return this.subscription.pipe(take(1), switchMap(doUnsubscribe)).toPromise();\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    SwPush.prototype.decodeBase64 = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) { return atob(input); };\n    SwPush.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SwPush.ctorParameters = function () { return [\n        { type: NgswCommChannel }\n    ]; };\n    return SwPush;\n}());\nexport { SwPush };\nif (false) {\n    /**\n     * Emits the payloads of the received push notification messages.\n     * @type {?}\n     */\n    SwPush.prototype.messages;\n    /**\n     * Emits the payloads of the received push notification messages as well as the action the user\n     * interacted with. If no action was used the action property will be an empty string `''`.\n     *\n     * Note that the `notification` property is **not** a [Notification][Mozilla Notification] object\n     * but rather a\n     * [NotificationOptions](https://notifications.spec.whatwg.org/#dictdef-notificationoptions)\n     * object that also includes the `title` of the [Notification][Mozilla Notification] object.\n     *\n     * [Mozilla Notification]: https://developer.mozilla.org/en-US/docs/Web/API/Notification\n     * @type {?}\n     */\n    SwPush.prototype.notificationClicks;\n    /**\n     * Emits the currently active\n     * [PushSubscription](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n     * associated to the Service Worker registration or `null` if there is no subscription.\n     * @type {?}\n     */\n    SwPush.prototype.subscription;\n    /** @type {?} */\n    SwPush.prototype.pushManager;\n    /** @type {?} */\n    SwPush.prototype.subscriptionChanges;\n    /** @type {?} */\n    SwPush.prototype.sw;\n}\n//# sourceMappingURL=push.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { NEVER } from 'rxjs';\nimport { ERR_SW_NOT_SUPPORTED, NgswCommChannel } from './low_level';\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * \\@publicApi\n */\nvar SwUpdate = /** @class */ (function () {\n    function SwUpdate(sw) {\n        this.sw = sw;\n        if (!sw.isEnabled) {\n            this.available = NEVER;\n            this.activated = NEVER;\n            return;\n        }\n        this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n        this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n    }\n    Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n        /**\n         * True if the Service Worker is enabled (supported by the browser and enabled via\n         * `ServiceWorkerModule`).\n         */\n        get: /**\n         * True if the Service Worker is enabled (supported by the browser and enabled via\n         * `ServiceWorkerModule`).\n         * @return {?}\n         */\n        function () { return this.sw.isEnabled; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SwUpdate.prototype.checkForUpdate = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        var statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n    };\n    /**\n     * @return {?}\n     */\n    SwUpdate.prototype.activateUpdate = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        var statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n    };\n    SwUpdate.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SwUpdate.ctorParameters = function () { return [\n        { type: NgswCommChannel }\n    ]; };\n    return SwUpdate;\n}());\nexport { SwUpdate };\nif (false) {\n    /**\n     * Emits an `UpdateAvailableEvent` event whenever a new app version is available.\n     * @type {?}\n     */\n    SwUpdate.prototype.available;\n    /**\n     * Emits an `UpdateActivatedEvent` event whenever the app has been updated to a new version.\n     * @type {?}\n     */\n    SwUpdate.prototype.activated;\n    /** @type {?} */\n    SwUpdate.prototype.sw;\n}\n//# sourceMappingURL=update.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { APP_INITIALIZER, ApplicationRef, InjectionToken, Injector, NgModule, PLATFORM_ID } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\nimport { NgswCommChannel } from './low_level';\nimport { SwPush } from './push';\nimport { SwUpdate } from './update';\n/**\n * @abstract\n */\nvar /**\n * @abstract\n */\nRegistrationOptions = /** @class */ (function () {\n    function RegistrationOptions() {\n    }\n    return RegistrationOptions;\n}());\n/**\n * @abstract\n */\nexport { RegistrationOptions };\nif (false) {\n    /** @type {?} */\n    RegistrationOptions.prototype.scope;\n    /** @type {?} */\n    RegistrationOptions.prototype.enabled;\n}\n/** @type {?} */\nexport var SCRIPT = new InjectionToken('NGSW_REGISTER_SCRIPT');\n/**\n * @param {?} injector\n * @param {?} script\n * @param {?} options\n * @param {?} platformId\n * @return {?}\n */\nexport function ngswAppInitializer(injector, script, options, platformId) {\n    /** @type {?} */\n    var initializer = function () {\n        /** @type {?} */\n        var app = injector.get(ApplicationRef);\n        if (!(isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n            options.enabled !== false)) {\n            return;\n        }\n        /** @type {?} */\n        var whenStable = app.isStable.pipe(filter(function (stable) { return !!stable; }), take(1)).toPromise();\n        // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n        // becomes active. This allows the SW to initialize itself even if there is no application\n        // traffic.\n        navigator.serviceWorker.addEventListener('controllerchange', function () {\n            if (navigator.serviceWorker.controller !== null) {\n                navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n            }\n        });\n        // Don't return the Promise, as that will block the application until the SW is registered, and\n        // cause a crash if the SW registration fails.\n        whenStable.then(function () { return navigator.serviceWorker.register(script, { scope: options.scope }); });\n    };\n    return initializer;\n}\n/**\n * @param {?} opts\n * @param {?} platformId\n * @return {?}\n */\nexport function ngswCommChannelFactory(opts, platformId) {\n    return new NgswCommChannel(isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n        undefined);\n}\n/**\n * \\@publicApi\n */\nvar ServiceWorkerModule = /** @class */ (function () {\n    function ServiceWorkerModule() {\n    }\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     */\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     * @param {?} script\n     * @param {?=} opts\n     * @return {?}\n     */\n    ServiceWorkerModule.register = /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     * @param {?} script\n     * @param {?=} opts\n     * @return {?}\n     */\n    function (script, opts) {\n        if (opts === void 0) { opts = {}; }\n        return {\n            ngModule: ServiceWorkerModule,\n            providers: [\n                { provide: SCRIPT, useValue: script },\n                { provide: RegistrationOptions, useValue: opts },\n                {\n                    provide: NgswCommChannel,\n                    useFactory: ngswCommChannelFactory,\n                    deps: [RegistrationOptions, PLATFORM_ID]\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: ngswAppInitializer,\n                    deps: [Injector, SCRIPT, RegistrationOptions, PLATFORM_ID],\n                    multi: true,\n                },\n            ],\n        };\n    };\n    ServiceWorkerModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [SwPush, SwUpdate],\n                },] },\n    ];\n    return ServiceWorkerModule;\n}());\nexport { ServiceWorkerModule };\n//# sourceMappingURL=module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ServiceWorkerModule } from './module';\nexport { SwPush } from './push';\nexport { SwUpdate } from './update';\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport { ServiceWorkerModule, SwPush, SwUpdate } from './src/index';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=public_api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { ServiceWorkerModule, SwPush, SwUpdate } from './public_api';\nexport { NgswCommChannel as ɵa } from './src/low_level';\nexport { RegistrationOptions as ɵb, SCRIPT as ɵc, ngswAppInitializer as ɵd, ngswCommChannelFactory as ɵe } from './src/module';\n//# sourceMappingURL=service-worker.js.map"],"names":["tslib_1.__assign"],"mappings":"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"}